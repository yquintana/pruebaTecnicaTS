
springdoc.swagger-ui.path=/openapi/swagger-ui.html
springdoc.api-docs.path=/openapi/v3/api-docs
springdoc.packagesToScan=com.todosistemas.pruebatecnica
springdoc.pathsToMatch=/**

spring.datasource.hikari.connection-timeout = 20000
spring.datasource.hikari.minimum-idle= 10 
spring.datasource.hikari.maximum-pool-size= 1
spring.datasource.hikari.idle-timeout=10000 
spring.datasource.hikari.max-lifetime= 1000 
spring.datasource.hikari.auto-commit =true
## PostgreSQL
spring.datasource.url=jdbc:mysql://localhost:3306/pruebaTS
spring.datasource.username=root
spring.datasource.password=Yerson1256
#drop n create table again, good for testing, comment this in production
#spring.jpa.hibernate.ddl-auto=create
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.validationQuery=SELECT 1
spring.datasource.test-on-borrow=true
spring.datasource.validation-interval=30000
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto=create-drop


# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy= org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.globally_quoted_identifiers=true
